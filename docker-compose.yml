services:
  # Main Claudia application
  claudia:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claudia-app
    environment:
      - DISPLAY=:99
      - CLAUDE_DIR=/home/claudia/.claude
      # AI Service Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key-here}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-your-claude-key-here}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your-gemini-key-here}
      - XAI_API_KEY=${XAI_API_KEY:-your-grok-key-here}
      - QWEN_API_KEY=${QWEN_API_KEY:-your-qwen-key-here}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY:-your-dashscope-key-here}
    volumes:
      - claude_data:/home/claudia/.claude
      - ./logs:/home/claudia/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    ports:
      - "5900:5900"  # VNC port for remote access
    networks:
      - claudia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "claudia"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Ollama service for local AI models
  ollama:
    image: ollama/ollama:latest
    container_name: claudia-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - claudia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: claudia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - claudia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database for analytics and session storage
  postgres:
    image: postgres:15-alpine
    container_name: claudia-postgres
    environment:
      POSTGRES_DB: claudia
      POSTGRES_USER: claudia
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-claudia123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - claudia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claudia -d claudia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for API routing
  nginx:
    image: nginx:alpine
    container_name: claudia-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - claudia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: claudia-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - claudia-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: claudia-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - claudia-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  claude_data:
    driver: local
  ollama_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  claudia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16